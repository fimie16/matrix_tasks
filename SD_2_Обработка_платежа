@startuml payment_processing_sequence
title Процессинг платежа

actor Клиент as customer
participant "Веб-интерфейс (SPA)" as spa
participant "API Gateway" as gateway
participant "Сервис заказов" as orders
database "БД заказов" as orders_db
participant "Сервис платежей" as payments
database "БД платежей" as payments_db
participant "Платежный шлюз" as payment_gateway
participant "Сервис уведомлений" as notifications

customer -> spa : Нажатие "Оплатить"
spa -> gateway : POST /payments {order_id, card_details}
gateway -> orders : Проверить заказ
orders -> orders_db : SELECT order (status=AWAITING_PAYMENT)
orders_db --> orders : Данные заказа
orders --> gateway : 200 OK (order_amount)

gateway -> payments : Создать платеж
payments -> payments_db : INSERT payment (PENDING)
payments_db --> payments : payment_id
payments -> payment_gateway : /charge {card, amount, order_id}
payment_gateway --> payments : payment_status (PROCESSING)

payments --> gateway : 202 Payment Processing
gateway --> spa : Перенаправить на страницу ожидания
spa -> customer : "Платеж обрабатывается..."

payment_gateway -> payments : Webhook /callback (status=SUCCESS)
alt Успешный платеж
    payments -> payments_db : UPDATE payment (SUCCESS)
    payments_db --> payments : OK
    payments -> orders : Уведомить об оплате
    orders -> orders_db : UPDATE order (PAID)
    orders_db --> orders : OK
    orders --> notifications : "Платеж успешен"
    notifications --> customer : "Оплата подтверждена"
    
else Ошибка платежа
    payments -> payments_db : UPDATE payment (FAILED)
    payments_db --> payments : OK
    payments -> orders : Уведомить об ошибке
    orders -> orders_db : UPDATE order (PAYMENT_FAILED)
    orders_db --> orders : OK
    orders --> notifications : "Платеж отклонен"
    notifications --> customer : "Ошибка оплаты"
end

@enduml
